@import '~@angular/material/theming';

// A custom theme file does two things:
//
// 1) Imports the mat-core() Sass mixin.
//    This includes all common styles that are used by multiple components.
//    This should only be included once in your application. If this mixin is included multiple times,
//    your application will end up with multiple copies of these common styles.
//
//    always include only once per project
@include mat-core();

//
// 2) Defines a theme data structure as the composition of multiple palettes.
//    This object can be created with either the mat-light-theme function or the mat-dark-theme function.
//    The output of this function is then passed to the angular-material-theme mixin,
//    which will output all of the corresponding styles for the theme.

// see: https://medium.com/@tomastrajan/the-complete-guide-to-angular-material-themes-4d165a9d24d1
// see: https://github.com/angular/material2/blob/master/guides/theming.md

// example for importimg a prebuild theme
// @import '~@angular/material/prebuilt-themes/deeppurple-amber.css';


// Default theme
$default-primary:  mat-palette($mat-indigo);
$default-accent:   mat-palette($mat-pink);
$default-theme:    mat-light-theme($default-primary, $default-accent);
.default-theme {
  @include angular-material-theme($default-theme);
}


// Light theme foreground element
$default-foreground:       map-get($default-theme, foreground);
$patched-foreground:       map-merge($default-foreground, (text: #81c784));
$light-theme:              mat-light-theme($default-primary, $default-accent);
$patched-theme:            map-merge($light-theme, (foreground: $patched-foreground));
.light-theme {
  @include angular-material-theme($patched-theme)
}


// Dark theme
$dark-primary:     mat-palette($mat-blue-grey);
$dark-accent:      mat-palette($mat-amber);
$dark-warn:        mat-palette($mat-deep-orange);
$dark-theme:       mat-dark-theme($dark-primary, $dark-accent, $dark-warn);
.dark-theme {
  @include angular-material-theme($dark-theme);
}






